@model IEnumerable<rpaapp.Models.Document>
@{
    ViewData["Title"] = "Dashboard";
}

<div style="width: 100%; float: right;">
<form asp-action="Dashboard" method="get">
    <div class="form-actions no-color" style="float: right;">
        <p>
            <input type="text" name="search" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" style="background-color: #034791;" />
            <a asp-action="Dashboard" class="btn btn-primary" style="background-color: #034791;">Back to List</a>
        </p>
    </div>
</form>
</div>

<hr>

<div class="tab">
    <button class="tablinks" onclick="openCity(event, 'All')" id="defaultOpen">All</button>
@*     <button class="tablinks" onclick="openCity(event, 'Waiting')">Waiting</button>
 *@    <button class="tablinks" onclick="openCity(event, 'Ready')">Ready</button>
    <button class="tablinks" onclick="openCity(event, 'Confirmed')">Confirmed</button>
    <button class="tablinks" onclick="openCity(event, 'Archived')">Archived</button>
</div>

<div id="All" class="tabcontent">
    <table class="table table-hover" style="margin-top: 10px;">  
        <thead>
            <th class="headerSortDown"><a asp-action="Dashboard" asp-route-order="@ViewData["SortParm"]" style="text-decoration: none; color: black;"><b>Name</b></a></th>
            <th class="headerSortDown hide"><a asp-action="Dashboard" asp-route-order="@ViewData["SizeParm"]" style="text-decoration: none; color: black;">Size</a></th>
            <th class="headerSortDown"><a asp-action="Dashboard" asp-route-order="@ViewData["UpldParm"]" style="text-decoration: none; color: black;">Uploaded by</a></th>
            <th class="headerSortDown hide"><a asp-action="Dashboard" asp-route-order="@ViewData["TimeParm"]" style="text-decoration: none; color: black;">Upload time</a></th>
            <th class="hide"><a style="text-decoration: none; color: black;">Status</a></th>
        </thead> 
        <tbody>
            @foreach (var item in Model)
            {
                var mb = @item.fsize / 1000000.0;
                <tr>
                    <td>
                        <a asp-action="Details" asp-controller="Txts" asp-route-id="@item.fguid" style="text-decoration: none;">@item.pdfname</a>
                    </td>
                    <td class="hide">@Math.Round(mb, 2) MB</td>
                    @if(item.writername != null)
                    {
                        <td>@item.writername</td>
                    }
                    else
                    {
                        <td></td>
                    }
                    <td class="hide">@item.uploaded.ToString("dd.MM.yyyy. H:mm:ss")</td>
                    <td class="hide">@item.Status</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div id="Ready" class="tabcontent">
    <table class="table table-hover" style="margin-top: 10px;">  
        <thead>
            <th class="headerSortDown"><a asp-action="Dashboard" asp-route-order="@ViewData["SortParm"]" style="text-decoration: none; color: black;"><b>Name</b></a></th>
            <th class="headerSortDown hide"><a asp-action="Dashboard" asp-route-order="@ViewData["SizeParm"]" style="text-decoration: none; color: black;">Size</a></th>
            <th class="headerSortDown"><a asp-action="Dashboard" asp-route-order="@ViewData["UpldParm"]" style="text-decoration: none; color: black;">Uploaded by</a></th>
            <th class="headerSortDown hide"><a asp-action="Dashboard" asp-route-order="@ViewData["TimeParm"]" style="text-decoration: none; color: black;">Upload time</a></th>
            <th class="hide"><a style="text-decoration: none; color: black;">Status</a></th>
        </thead> 
        <tbody>
            @foreach (var item in Model.Where(c => c.Status == Status.Ready))
            {
                var mb = @item.fsize / 1000000.0;
                <tr>
                    <td>
                        <a asp-action="Details" asp-controller="Txts" asp-route-id="@item.fguid" style="text-decoration: none;">@item.pdfname</a>
                    </td>
                    <td class="hide">@Math.Round(mb, 2) MB</td>
                    @if(item.writername != null)
                    {
                        <td>@item.writername</td>
                    }
                    else
                    {
                        <td></td>
                    }
                    <td class="hide">@item.uploaded.ToString("dd.MM.yyyy. H:mm:ss")</td>
                    <td class="hide">@item.Status</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div id="Waiting" class="tabcontent">
</div>
<div id="Confirmed" class="tabcontent">
    <table class="table table-hover" style="margin-top: 10px;">  
        <thead>
            <th class="headerSortDown"><a asp-action="Dashboard" asp-route-order="@ViewData["SortParm"]" style="text-decoration: none; color: black;"><b>Name</b></a></th>
            <th class="headerSortDown hide"><a asp-action="Dashboard" asp-route-order="@ViewData["SizeParm"]" style="text-decoration: none; color: black;">Size</a></th>
            <th class="headerSortDown"><a asp-action="Dashboard" asp-route-order="@ViewData["UpldParm"]" style="text-decoration: none; color: black;">Uploaded by</a></th>
            <th class="headerSortDown hide"><a asp-action="Dashboard" asp-route-order="@ViewData["TimeParm"]" style="text-decoration: none; color: black;">Upload time</a></th>
            <th class="hide"><a style="text-decoration: none; color: black;">Status</a></th>
        </thead> 
        <tbody>
            @foreach (var item in Model.Where(c => c.Status == Status.Confirmed))
            {
                var mb = @item.fsize / 1000000.0;
                <tr>
                    <td>
                        <a asp-action="Details" asp-controller="Txts" asp-route-id="@item.fguid" style="text-decoration: none;">@item.pdfname</a>
                    </td>
                    <td class="hide">@Math.Round(mb, 2) MB</td>
                    @if(item.writername != null)
                    {
                        <td>@item.writername</td>
                    }
                    else
                    {
                        <td></td>
                    }
                    <td class="hide">@item.uploaded.ToString("dd.MM.yyyy. H:mm:ss")</td>
                    <td class="hide">@item.Status</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div id="Archived" class="tabcontent">
    <table class="table table-hover" style="margin-top: 10px;">  
        <thead>
            <th class="headerSortDown"><a asp-action="Dashboard" asp-route-order="@ViewData["SortParm"]" style="text-decoration: none; color: black;"><b>Name</b></a></th>
            <th class="headerSortDown hide"><a asp-action="Dashboard" asp-route-order="@ViewData["SizeParm"]" style="text-decoration: none; color: black;">Size</a></th>
            <th class="headerSortDown"><a asp-action="Dashboard" asp-route-order="@ViewData["UpldParm"]" style="text-decoration: none; color: black;">Uploaded by</a></th>
            <th class="headerSortDown hide"><a asp-action="Dashboard" asp-route-order="@ViewData["TimeParm"]" style="text-decoration: none; color: black;">Upload time</a></th>
            <th class="hide"><a style="text-decoration: none; color: black;">Status</a></th>
            <th><a style="text-decoration: none; color: black;">RAC</a></th>
        </thead> 
        <tbody>
            @foreach (var item in Model.Where(c => c.Status == Status.Archived))
            {
                var mb = @item.fsize / 1000000.0;
                <tr>
                    <td>
                        <a asp-action="Details" asp-controller="Txts" asp-route-id="@item.fguid" style="text-decoration: none;">@item.pdfname</a>
                    </td>
                    <td class="hide">@Math.Round(mb, 2) MB</td>
                    @if(item.writername != null)
                    {
                        <td>@item.writername</td>
                    }
                    else
                    {
                        <td></td>
                    }
                    <td class="hide">@item.uploaded.ToString("dd.MM.yyyy. H:mm:ss")</td>
                    <td class="hide">@item.Status</td>
                    <td>@item.RAC_number</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div style="width: 150px; margin: auto; padding-top: 25px;">
    <a asp-controller="Home" asp-action="Upload" style="margin-top: 25px;"><button class="btn btn-primary" style="background-color: #034791; color: white; width: 150px;">Upload files</button></a>
</div>

<script>

function openCity(evt, cityName) {
  // Declare all variables
  var i, tabcontent, tablinks;

  // Get all elements with class="tabcontent" and hide them
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }

  // Get all elements with class="tablinks" and remove the class "active"
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }

  // Show the current tab, and add an "active" class to the link that opened the tab
  document.getElementById(cityName).style.display = "block";
  evt.currentTarget.className += " active";
}

document.getElementById("defaultOpen").click();

</script>

<style>

@@media (max-width: 400px){
    .hide{
        display: none;
    }
    .tab{
        width: 25%;
    }
    .tabcontent{
        width: 75%;
    }
}
@@media (min-width: 401px) and (max-width: 992px){
    .hide{
        display: none;
    }
    .tab{
        width: 20%;
    }
    .tabcontent{
        width: 80%;
    }
}
@@media (min-width: 993px)
{
    .tab{
        width: 10%;
    }
    .tabcontent{
        width: 90%;
    }
}

table td,
table th {
  border: 1px solid silver;
}

.headerSortDown:after,
.headerSortUp:after {
  content: ' ';
  position: relative;
  left: 2px;
  border: 8px solid transparent;
}

.headerSortDown:after {
  top: 10px;
  border-top-color: silver;
}

.headerSortUp:after {
  bottom: 15px;
  border-bottom-color: silver;
}

.headerSortDown,
.headerSortUp {
  padding-right: 10px;
}

* {box-sizing: border-box}

/* Style the tab */
.tab {
  float: left;
  background-color: #f1f1f1;
  height: 120px;
}

/* Style the buttons that are used to open the tab content */
.tab button {
  display: block;
  background-color: inherit;
  color: black;
  padding: 12px 6px;
  width: 100%;
  border: none;
  outline: none;
  text-align: left;
  cursor: pointer;
  transition: 0.3s;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current "tab button" class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  float: left;
  padding: 0px 12px;
  border: 1px solid #ccc;
  height: 500px;
  margin-bottom: 25px;
  overflow: auto;
}
</style>
